# This is a basic workflow to help you get started with Actions

name: lint

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  lint_csharp:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '5.0.x' # SDK Version to use; x will use the latest version of the 5.0 channel

      # Format the output of dotnet format
      - name: Add dotnet-format problem matcher
        uses: xt0rted/dotnet-format-problem-matcher@v1

      # Install dotnet format as a global tool
      - name: Install dotnet format
        run: dotnet tool update --global dotnet-format

      # Run dotnet format --dry-run --check
      # By default, the task ensure the exit code is 0
      # If a file needs to be edited by dotnet format, the exit code will be a non-zero value
      # So the task will fail
      - name: Run dotnet format
        run: dotnet format --check --verbosity diagnostic
